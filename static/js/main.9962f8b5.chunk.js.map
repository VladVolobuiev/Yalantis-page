{"version":3,"sources":["redux/user/user.types.js","components/Employees.jsx","redux/user/user.actions.js","components/api.js","App.js","reportWebVitals.js","redux/user/user.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["SET_USER","connect","state","user","alphabet","months","setUser","type","payload","props","useState","activeUser","setActiveUser","useEffect","axios","then","response","data","JSON","parse","window","localStorage","getItem","setItem","stringify","userMonths","className","style","textAlign","map","s","some","u","firstName","sort","a","b","id","includes","lastName","checked","onChange","splice","indexOf","width","marginBottom","length","borderTop","borderLeft","borderBottom","padding","m","Date","dob","getMonth","getDay","getFullYear","App","Employees","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","userReducer","action","rootReducer","combineReducers","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAaA,EAAW,gB,eCwLTC,eANS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KAAKA,KACjBC,SAAUF,EAAME,SAASA,SAEzBC,OAAQH,EAAMG,OAAOA,UAEiB,CAAEC,QCtLnB,SAACH,GAAD,MAAW,CAChCI,KAAMP,EACNQ,QAASL,KDoLIF,EAnLO,SAACQ,GAAW,IAAD,EACKC,mBAAS,IADd,mBACxBC,EADwB,KACZC,EADY,KAG/BC,qBAAU,WELHC,MACL,kEFKWC,MAAK,SAACC,GACfP,EAAMH,QAAQU,EAASC,WAExB,IACHJ,qBAAU,WACRD,EAAcM,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBACpD,IAEHT,qBAAU,WACRO,OAAOC,aAAaE,QAAQ,aAAcL,KAAKM,UAAUb,MACxD,CAACA,IACJ,IAAMc,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,WACA,WACA,YAGF,OACE,sBAAKC,UAAU,MAAf,UACE,gCACE,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,uBACA,qBAAKF,UAAU,gBAAf,SACGjB,EAAML,SAASyB,KAAI,SAACC,GAAD,OAClB,gCACE,6BAAKA,IACJrB,EAAMN,KAAK4B,MAAK,SAACC,GAAD,OAAOA,EAAEC,UAAU,KAAOH,KACzCrB,EAAMN,KACH+B,MAAK,SAACC,EAAGC,GACR,OAAID,EAAEF,UAAYG,EAAEH,UACX,EAELE,EAAEF,UAAYG,EAAEH,WACV,EAEH,KAERJ,KAAI,SAACG,GAAD,OACHA,EAAEC,UAAU,KAAOH,EACjB,sBAAgBJ,UAAWM,EAAEK,GAA7B,UACE,qBACEX,WACiD,IAA/Cf,EAAWkB,KAAI,SAACM,GAAD,OAAOA,EAAEE,MAAIC,SAASN,EAAEK,IACnC,cACA,GAJR,SAOE,8BACGL,EAAEC,UADL,IACiBD,EAAEO,cAGrB,gCACE,8BACE,uBACEhC,KAAK,QACLiC,QAEE,GADA7B,EAAWkB,KAAI,SAACM,GAAD,OAAOA,EAAEE,MAAIC,SAASN,EAAEK,IAKzCI,SAAU,WACR9B,EAAW+B,OACT/B,EAAWkB,KAAI,SAACM,GAAD,OAAOA,EAAEE,MAAIM,QAAQX,EAAEK,IACtC,GAEFzB,EAAc,YAAID,OAdxB,gBAmBA,8BACE,uBACEJ,KAAK,QACLkC,SAAU,kBAAM7B,EAAc,GAAD,mBAAKD,GAAL,CAAiBqB,MAC9CQ,SAEE,IADA7B,EAAWkB,KAAI,SAACM,GAAD,OAAOA,EAAEE,MAAIC,SAASN,EAAEK,MAL7C,iBAhCML,EAAEK,IAgDZ,MAIN,yDAMV,sBAAKV,MAAO,CAAEiB,MAAO,QAArB,UACE,oBAAIjB,MAAO,CAAEC,UAAW,SAAUiB,aAAc,QAAhD,gCAGsB,GAArBlC,EAAWmC,OACV,qBACEnB,MAAO,CACLoB,UAAW,aACXC,WAAY,YACZC,aAAc,YACdC,QAAS,mBALb,SAQGzC,EAAMJ,OAAOwB,KAAI,SAACsB,GAAD,OAChB,gCACE,6BAAKA,IACJxC,EAAWoB,MACV,SAACC,GAAD,OAAOP,EAAW,IAAI2B,KAAKpB,EAAEqB,KAAKC,cAAgBH,KAElDxC,EACGuB,MAAK,SAACC,EAAGC,GACR,OAAID,EAAEI,SAAWH,EAAEG,SACV,EAELJ,EAAEI,SAAWH,EAAEG,UACT,EAEH,KAERV,KAAI,SAACG,GAAD,OACHP,EAAW,IAAI2B,KAAKpB,EAAEqB,KAAKC,cAAgBH,EACzC,qBAAgBzB,UAAWM,EAAEK,GAA7B,SACE,8BACE,8BACGL,EAAEC,UADL,IACiBD,EAAEO,SADnB,KAC+B,IAC5B,IAAIa,KAAKpB,EAAEqB,KAAKE,SAAU,IAC1B9B,EAAW,IAAI2B,KAAKpB,EAAEqB,KAAKC,YAH9B,IAIG,IAAIF,KAAKpB,EAAEqB,KAAKG,cAJnB,cAFMxB,EAAEK,IAWZ,MAIN,sDAMR,oBACEV,MAAO,CACLuB,QAAS,mBAFb,8CG3JKO,MARf,WACE,OACE,8BACE,cAACC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,uBCLRO,EAAe,CACnBhE,KAAM,GACNC,SAAU,CACR,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,OAAQ,CACN,WACA,WACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,YAEFM,WAAY,IAGDyD,EAAc,WAAmC,IAAlClE,EAAiC,uDAAzBiE,EAAcE,EAAW,uCAC3D,OAAQA,EAAO9D,MACb,KAAKP,EACH,OAAO,2BACFE,GADL,IAEEC,KAAMkE,EAAO7D,UAGjB,QACE,OAAON,ICvDAoE,EAAcC,0BAAgB,CACzCpE,KAAMiE,EACNhE,SAAUgE,EACV/D,OAAQ+D,I,QCDJI,EAAmBC,8BAAoBC,0BAAgBC,MAG9CC,EADDC,sBAAYP,EAAaE,GCCvCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.9962f8b5.chunk.js","sourcesContent":["export const SET_USER = 'user/SET_USER';\r\nexport const SET_ACTIVE = 'user/SET_ACTIVE';\r\nexport const SET_NOT_ACTIVE = 'user/SET_NOT_ACTIVE';\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setUser } from '../redux/user/user.actions.js';\r\nimport { getUsers } from './api.js';\r\n\r\nconst EmployeesList = (props) => {\r\n  const [activeUser, setActiveUser] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUsers().then((response) => {\r\n      props.setUser(response.data);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setActiveUser(JSON.parse(window.localStorage.getItem('activeUser')));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('activeUser', JSON.stringify(activeUser));\r\n  }, [activeUser]);\r\n  const userMonths = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'Octember',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h1 style={{ textAlign: 'center' }}>Employees</h1>\r\n        <div className=\"alphabet-wrap\">\r\n          {props.alphabet.map((s) => (\r\n            <div>\r\n              <h2>{s}</h2>\r\n              {props.user.some((u) => u.firstName[0] === s) ? (\r\n                props.user\r\n                  .sort((a, b) => {\r\n                    if (a.firstName > b.firstName) {\r\n                      return 1;\r\n                    }\r\n                    if (a.firstName < b.firstName) {\r\n                      return -1;\r\n                    }\r\n                    return 0;\r\n                  })\r\n                  .map((u) =>\r\n                    u.firstName[0] === s ? (\r\n                      <div key={u.id} className={u.id}>\r\n                        <div\r\n                          className={\r\n                            activeUser.map((a) => a.id).includes(u.id) === true\r\n                              ? 'active-user'\r\n                              : ''\r\n                          }\r\n                        >\r\n                          <b>\r\n                            {u.firstName} {u.lastName}\r\n                          </b>\r\n                        </div>\r\n                        <div>\r\n                          <p>\r\n                            <input\r\n                              type=\"radio\"\r\n                              checked={\r\n                                activeUser.map((a) => a.id).includes(u.id) ==\r\n                                false\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                              onChange={() => {\r\n                                activeUser.splice(\r\n                                  activeUser.map((a) => a.id).indexOf(u.id),\r\n                                  1\r\n                                );\r\n                                setActiveUser([...activeUser]);\r\n                              }}\r\n                            />\r\n                            not active\r\n                          </p>\r\n                          <p>\r\n                            <input\r\n                              type=\"radio\"\r\n                              onChange={() => setActiveUser([...activeUser, u])}\r\n                              checked={\r\n                                activeUser.map((a) => a.id).includes(u.id) ===\r\n                                true\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                            />\r\n                            active\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      ''\r\n                    )\r\n                  )\r\n              ) : (\r\n                <h4>No Employees</h4>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div style={{ width: '50vw' }}>\r\n        <h1 style={{ textAlign: 'center', marginBottom: '15px' }}>\r\n          Employees birthday\r\n        </h1>\r\n        {activeUser.length != 0 ? (\r\n          <div\r\n            style={{\r\n              borderTop: '1px solid ',\r\n              borderLeft: '1px solid',\r\n              borderBottom: '1px solid',\r\n              padding: '15px 0 15px 4vw',\r\n            }}\r\n          >\r\n            {props.months.map((m) => (\r\n              <div>\r\n                <h3>{m}</h3>\r\n                {activeUser.some(\r\n                  (u) => userMonths[new Date(u.dob).getMonth()] === m\r\n                ) ? (\r\n                  activeUser\r\n                    .sort((a, b) => {\r\n                      if (a.lastName > b.lastName) {\r\n                        return 1;\r\n                      }\r\n                      if (a.lastName < b.lastName) {\r\n                        return -1;\r\n                      }\r\n                      return 0;\r\n                    })\r\n                    .map((u) =>\r\n                      userMonths[new Date(u.dob).getMonth()] === m ? (\r\n                        <div key={u.id} className={u.id}>\r\n                          <div>\r\n                            <b>\r\n                              {u.firstName} {u.lastName} -{' '}\r\n                              {new Date(u.dob).getDay()}{' '}\r\n                              {userMonths[new Date(u.dob).getMonth()]},\r\n                              {new Date(u.dob).getFullYear()} year\r\n                            </b>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    )\r\n                ) : (\r\n                  <h4>No Employees</h4>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h3\r\n            style={{\r\n              padding: '15px 0 15px 4vw',\r\n            }}\r\n          >\r\n            Employees List is empty\r\n          </h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user.user,\r\n  alphabet: state.alphabet.alphabet,\r\n\r\n  months: state.months.months,\r\n});\r\nexport default connect(mapStateToProps, { setUser })(EmployeesList);\r\n","import { SET_USER } from './user.types';\r\n\r\nexport const setUser = (user) => ({\r\n  type: SET_USER,\r\n  payload: user,\r\n});\r\n","import * as axios from 'axios';\r\n\r\nexport const getUsers = () => {\r\n  return axios.get(\r\n    'https://yalantis-react-school-api.yalantis.com/api/task0/users'\r\n  );\r\n};\r\n","import './App.css';\nimport EmployeesList from './components/Employees';\n\nfunction App() {\n  return (\n    <div>\n      <EmployeesList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_USER } from './user.types';\r\n\r\nconst initialState = {\r\n  user: [],\r\n  alphabet: [\r\n    'A',\r\n    'B',\r\n    'C',\r\n    'D',\r\n    'E',\r\n    'F',\r\n    'G',\r\n    'H',\r\n    'I',\r\n    'J',\r\n    'K',\r\n    'L',\r\n    'M',\r\n    'N',\r\n    'O',\r\n    'P',\r\n    'Q',\r\n    'R',\r\n    'S',\r\n    'T',\r\n    'U',\r\n    'V',\r\n    'W',\r\n    'X',\r\n    'Y',\r\n    'Z',\r\n  ],\r\n  months: [\r\n    'November',\r\n    'December',\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'Octember',\r\n  ],\r\n  activeUser: [],\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { userReducer } from './user/user.reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: userReducer,\r\n  alphabet: userReducer,\r\n  months: userReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { rootReducer } from './rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\n\r\nconst store = createStore(rootReducer, composedEnhancer);\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from '../src/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}